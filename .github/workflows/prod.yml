name: Update SGs and Run Atlantis Plan

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  run_atlantis_plan:
    runs-on: ubuntu-latest
    env:
      AWS_ROLE_ARN: ${{secrets.AWS_ROLE_ARN}}
      SECURITY_GROUP_1: ${{secrets.SECURITY_GROUP_1}}
      SECURITY_GROUP_2: ${{secrets.SECURITY_GROUP_2}}
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Get Github action IP
      id: ip
      uses: haythem/public-ip@v1.3

    - name: Assume IAM Role
      id: assume_role
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: us-east-1
       
    - name: Add Github Actions IP to Security group-1
      id: add_sg1
      run: |
        for ip in ${{ steps.ip.outputs.ipv4 }}; do
            aws ec2 authorize-security-group-ingress --group-id $SECURITY_GROUP_1 --protocol tcp --port 80 --cidr $ip/32
            echo "$ip/32" >> added_cidr_sg1.txt
        done
 
    - name: Add Github Actions IP to Security group-2
      id: add_sg2
      run: |
        for ip in ${{ steps.ip.outputs.ipv4 }}; do
            aws ec2 authorize-security-group-ingress --group-id $SECURITY_GROUP_2 --protocol tcp --port 443 --cidr $ip/32
            echo "$ip/32" >> added_cidr_sg2.txt
        done 

    - name: Revoke Port 80 Rules from Security Group 1
      run: |
        cat added_cidr_sg1.txt | while read cidr_ip; do
          if [ ! -z "$cidr_ip" ]; then
            aws ec2 revoke-security-group-ingress --group-id $SECURITY_GROUP_1 --protocol tcp --port 80 --cidr "$cidr_ip" || echo "Failed to revoke ingress permissions for CIDR IP: $cidr_ip"
          fi
        done
 
    - name: Revoke Port 443 Rules from Security Group 2
      run: |
        cat added_cidr_sg2.txt | while read cidr_ip; do
          if [ ! -z "$cidr_ip" ]; then
            aws ec2 revoke-security-group-ingress --group-id $SECURITY_GROUP_2 --protocol tcp --port 443 --cidr "$cidr_ip" || echo "Failed to revoke ingress permissions for CIDR IP: $cidr_ip"
          fi
        done